(function() {
  var DB, os;

  DB = require('../lib/db');

  os = require('os');

  describe("DB", function() {
    var data, db;
    db = null;
    data = null;
    beforeEach(function() {
      db = new DB();
      data = {
        testproject1: {
          title: "Test project 1",
          group: "Test",
          paths: ["/Users/project-1"]
        },
        testproject2: {
          _id: 'testproject2',
          title: "Test project 2",
          paths: ["/Users/project-2"]
        }
      };
      spyOn(db, 'readFile').andCallFake(function(callback) {
        return callback(data);
      });
      return spyOn(db, 'writeFile').andCallFake(function(projects, callback) {
        data = projects;
        return callback();
      });
    });
    describe("::Find", function() {
      it("finds all projects when given no query", function() {
        return db.find(function(projects) {
          return expect(projects.length).toBe(2);
        });
      });
      it("finds project from path", function() {
        db.setSearchQuery('paths', ['/Users/project-2']);
        expect(db.searchKey).toBe('paths');
        expect(db.searchValue).toEqual(['/Users/project-2']);
        return db.find(function(project) {
          return expect(project.title).toBe('Test project 2');
        });
      });
      it("finds project from title", function() {
        db.setSearchQuery('title', 'Test project 1');
        return db.find(function(project) {
          return expect(project.title).toBe('Test project 1');
        });
      });
      it("finds project from id", function() {
        db.setSearchQuery('_id', 'testproject2');
        return db.find(function(project) {
          return expect(project.title).toBe('Test project 2');
        });
      });
      return it("finds nothing if query is wrong", function() {
        db.setSearchQuery('_id', 'noproject');
        return db.find(function(project) {
          return expect(project).toBe(false);
        });
      });
    });
    it("can add a project", function() {
      var newProject;
      newProject = {
        title: "New Project",
        paths: ["/Users/new-project"]
      };
      return db.add(newProject, function(id) {
        expect(id).toBe('newproject');
        return db.find(function(projects) {
          return expect(projects.length).toBe(3);
        });
      });
    });
    it("can remove a project", function() {
      return db["delete"]("testproject1", function() {
        return db.find(function(projects) {
          return expect(projects.length).toBe(1);
        });
      });
    });
    return describe("Environment specific settings", function() {
      it("loads a generic file if not set", function() {
        var filedir;
        atom.config.set('project-manager.environmentSpecificProjects', false);
        filedir = atom.getConfigDirPath();
        return expect(db.file()).toBe("" + filedir + "/projects.cson");
      });
      return it("loads a environment specific file is set to true", function() {
        var filedir, hostname;
        atom.config.set('project-manager.environmentSpecificProjects', true);
        hostname = os.hostname().split('.').shift().toLowerCase();
        filedir = atom.getConfigDirPath();
        return expect(db.file()).toBe("" + filedir + "/projects." + hostname + ".cson");
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL2hvbWUvc2d1ZW50aGVyLy5hdG9tL3BhY2thZ2VzL3Byb2plY3QtbWFuYWdlci9zcGVjL2RiLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLE1BQUE7O0FBQUEsRUFBQSxFQUFBLEdBQUssT0FBQSxDQUFRLFdBQVIsQ0FBTCxDQUFBOztBQUFBLEVBQ0EsRUFBQSxHQUFLLE9BQUEsQ0FBUSxJQUFSLENBREwsQ0FBQTs7QUFBQSxFQUdBLFFBQUEsQ0FBUyxJQUFULEVBQWUsU0FBQSxHQUFBO0FBQ2IsUUFBQSxRQUFBO0FBQUEsSUFBQSxFQUFBLEdBQUssSUFBTCxDQUFBO0FBQUEsSUFDQSxJQUFBLEdBQU8sSUFEUCxDQUFBO0FBQUEsSUFHQSxVQUFBLENBQVcsU0FBQSxHQUFBO0FBQ1QsTUFBQSxFQUFBLEdBQVMsSUFBQSxFQUFBLENBQUEsQ0FBVCxDQUFBO0FBQUEsTUFFQSxJQUFBLEdBQ0U7QUFBQSxRQUFBLFlBQUEsRUFDRTtBQUFBLFVBQUEsS0FBQSxFQUFPLGdCQUFQO0FBQUEsVUFDQSxLQUFBLEVBQU8sTUFEUDtBQUFBLFVBRUEsS0FBQSxFQUFPLENBQ0wsa0JBREssQ0FGUDtTQURGO0FBQUEsUUFNQSxZQUFBLEVBQ0U7QUFBQSxVQUFBLEdBQUEsRUFBSyxjQUFMO0FBQUEsVUFDQSxLQUFBLEVBQU8sZ0JBRFA7QUFBQSxVQUVBLEtBQUEsRUFBTyxDQUNMLGtCQURLLENBRlA7U0FQRjtPQUhGLENBQUE7QUFBQSxNQWdCQSxLQUFBLENBQU0sRUFBTixFQUFVLFVBQVYsQ0FBcUIsQ0FBQyxXQUF0QixDQUFrQyxTQUFDLFFBQUQsR0FBQTtlQUNoQyxRQUFBLENBQVMsSUFBVCxFQURnQztNQUFBLENBQWxDLENBaEJBLENBQUE7YUFrQkEsS0FBQSxDQUFNLEVBQU4sRUFBVSxXQUFWLENBQXNCLENBQUMsV0FB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

//# sourceURL=/home/sguenther/.atom/packages/project-manager/spec/db-spec.coffee
